dist: xenial
language: python

python:
  - "2.7"
  - "3.7"

services:
  - postgres
  - mysql

env:
  - DB=generic
  - DB=postgres POSTGIS_VERSION=1.5
  #- DB=postgres POSTGIS_VERSION=2
  - DB=mysql

install:
  # install GeoAlchemy in editable mode
  - pip install -e .

  # install pytest and nose
  - pip install pytest nose

  # install individual dependencies
  - if [[ "$DB" == "postgres" ]]; then pip install psycopg2; fi
  - if [[ "$DB" == "mysql" ]]; then pip install mysqlclient; fi

  # install PostGIS 2.x
  - if [[ "$DB" == "postgres" ]] && [[ "$POSTGIS_VERSION" != "1.5" ]]; then sudo apt-add-repository -y ppa:sharpie/for-science; fi
  - if [[ "$DB" == "postgres" ]] && [[ "$POSTGIS_VERSION" != "1.5" ]]; then sudo apt-add-repository -y ppa:sharpie/postgis-nightly; fi
  - if [[ "$DB" == "postgres" ]] && [[ "$POSTGIS_VERSION" != "1.5" ]]; then sudo apt-get update; fi

  # install PostGIS
  - if [[ "$DB" == "postgres" ]]; then sudo apt-get install postgresql-9.1-postgis -q; fi

before_script:
  # create database user "gis"
  - if [[ "$DB" == "postgres" ]]; then psql -U postgres -c "CREATE ROLE gis PASSWORD 'gis' SUPERUSER CREATEDB CREATEROLE INHERIT LOGIN;"; fi
  - if [[ "$DB" == "mysql" ]]; then mysql --user=root -e "CREATE USER 'gis'@'localhost' IDENTIFIED BY 'gis';"; fi
  - if [[ "$DB" == "mysql" ]]; then mysql --user=root -e "GRANT ALL ON *.* TO 'gis'@'localhost';"; fi

  # create database "gis"
  - if [[ "$DB" == "postgres" ]]; then psql -U postgres -c "CREATE DATABASE gis;"; fi
  - if [[ "$DB" == "mysql" ]]; then mysql --user=root -e "CREATE DATABASE gis;"; fi

  # add PostGIS extension to "gis" database
  - if [[ "$DB" == "postgres" ]] && [[ "$POSTGIS_VERSION" == "1.5" ]]; then psql -d gis -U postgres -f /usr/share/postgresql/9.1/contrib/postgis-1.5/postgis.sql; fi
  - if [[ "$DB" == "postgres" ]] && [[ "$POSTGIS_VERSION" == "1.5" ]]; then psql -d gis -U postgres -f /usr/share/postgresql/9.1/contrib/postgis-1.5/spatial_ref_sys.sql; fi
  - if [[ "$DB" == "postgres" ]] && [[ "$POSTGIS_VERSION" != "1.5" ]]; then psql -d gis -U postgres -c "CREATE EXTENSION postgis;"; fi

script:
  # run tests
  - if [[ "$DB" == "generic" ]]; then pytest geoalchemy/tests/test_dialect.py; fi
  - if [[ "$DB" == "generic" ]]; then pytest geoalchemy/tests/test_type.py; fi

  - if [[ "$DB" == "postgres" ]]; then pytest geoalchemy/tests/test_postgis.py; fi
  - if [[ "$DB" == "mysql" ]]; then pytest --tb=short geoalchemy/tests/test_mysql.py; fi

notifications:
  email:
    on_failure: change
